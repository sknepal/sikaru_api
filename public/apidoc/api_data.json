[  {    "type": "get",    "url": "/categories",    "title": "List the categories",    "group": "Category",    "permission": [      {        "name": "none",        "title": "No permission needed.",        "description": "<p>This method is accessible even if the user is not logged in.</p>"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "categories",            "description": "<p>Categories list</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>Category id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "title",            "description": "<p>Category title</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>Category description</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "created_at",            "description": "<p>Category created date</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "updated_at",            "description": "<p>Category updated date</p>"          }        ]      },      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n[\n  {\n    \"id\": 1,\n    \"title\": \"Road\",\n    \"description\": \"Road problems\",\n    \"created_at\": \"2016-10-27T07:02:31.000Z\",\n    \"updated_at\": \"2016-10-27T07:02:31.000Z\"\n  }\n]",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Categories not found error",          "content": "HTTP/1.1 404 Not Found",          "type": "json"        },        {          "title": "List error",          "content": "HTTP/1.1 412 Precondition Failed",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routes/categories.js",    "groupTitle": "Category",    "name": "GetCategories"  },  {    "type": "delete",    "url": "/comments/:id",    "title": "Delete a comment by the authenticated user",    "group": "Comment",    "permission": [      {        "name": "user",        "title": "User needs to be logged in.",        "description": "<p>This method is accessible to only the logged in users.</p>"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>Token of authenticated user</p>"          }        ]      },      "examples": [        {          "title": "Header",          "content": "{\"Authorization\": \"JWT abc.xyz.123.gfh\"}",          "type": "json"        }      ]    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "id",            "optional": false,            "field": "id",            "description": "<p>Comment Id</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 204 No Content",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Delete error",          "content": "HTTP/1.1 412 Precondition Failed",          "type": "json"        },        {          "title": "Authentication error",          "content": "HTTP/1.1 401 Unauthorized",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routes/comments.js",    "groupTitle": "Comment",    "name": "DeleteCommentsId"  },  {    "type": "get",    "url": "/issues/:id/comments",    "title": "List the comments on an issue",    "group": "Comment",    "permission": [      {        "name": "user",        "title": "User needs to be logged in.",        "description": "<p>This method is accessible to only the logged in users.</p>"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>Token of authenticated user</p>"          }        ]      },      "examples": [        {          "title": "Header",          "content": "{\"Authorization\": \"JWT abc.xyz.123.gfh\"}",          "type": "json"        }      ]    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "id",            "optional": false,            "field": "id",            "description": "<p>Issue Id</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>Comment Id</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "user_id",            "description": "<p>Commentor's Id</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "issue_id",            "description": "<p>Issue Id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "comment",            "description": "<p>Comment contents</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "updated_at",            "description": "<p>Comment update date</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "created_at",            "description": "<p>Comment created date</p>"          }        ]      },      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n[\n\t{\n  \t\t\"id\": 1,\n  \t\t\"user_id\": 1,\n  \t\t\"issue_id\": 1,\n  \t\t\"comment\": \"Manholes should be covered\",\n  \t\t\"updated_at\": \"2016-10-30T18:49:42.000Z\",\n  \t\t\"created_at\": \"2016-10-30T18:49:42.000Z\"\n\t}\n]",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "List error",          "content": "HTTP/1.1 412 Precondition Failed",          "type": "json"        },        {          "title": "Authentication error",          "content": "HTTP/1.1 401 Unauthorized",          "type": "json"        },        {          "title": "Comments not found error",          "content": "HTTP/1.1 404 Not Found",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routes/issues.js",    "groupTitle": "Comment",    "name": "GetIssuesIdComments"  },  {    "type": "get",    "url": "/users/:id/comments",    "title": "List the comments created by a user",    "group": "Comment",    "permission": [      {        "name": "none",        "title": "No permission needed.",        "description": "<p>This method is accessible even if the user is not logged in.</p>"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "id",            "optional": false,            "field": "id",            "description": "<p>User id</p>"          }        ],        "Query Parameter": [          {            "group": "Query Parameter",            "type": "Date",            "optional": true,            "field": "date",            "description": "<p>Upper date limit. Issues created before this date are listed. This is also a pagination offset.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "comments",            "description": "<p>Comment's list</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>Comment id</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "user_id",            "description": "<p>User Id of commentor</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "issue_id",            "description": "<p>Issue Id to which comment belongs</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "comment",            "description": "<p>Comment content</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "created_at",            "description": "<p>Comment created date</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "updated_at",            "description": "<p>Comment updated date</p>"          }        ]      },      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n[\n  {\n    \"id\": 1,\n    \"user_id\": 1,\n    \"issue_id\": 1,\n    \"comment\": \"The manhole should be covered.\",\n    \"created_at\": \"2016-10-30T18:49:42.000Z\",\n    \"updated_at\": \"2016-10-30T18:49:42.000Z\"\n  }\n]",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Comment not found error",          "content": "HTTP/1.1 404 Not Found",          "type": "json"        },        {          "title": "List error",          "content": "HTTP/1.1 412 Precondition Failed",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routes/users.js",    "groupTitle": "Comment",    "name": "GetUsersIdComments"  },  {    "type": "post",    "url": "/comments",    "title": "Comment on an issue",    "group": "Comment",    "permission": [      {        "name": "user",        "title": "User needs to be logged in.",        "description": "<p>This method is accessible to only the logged in users.</p>"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>Token of authenticated user</p>"          }        ]      },      "examples": [        {          "title": "Header",          "content": "{\"Authorization\": \"JWT abc.xyz.123.gfh\"}",          "type": "json"        }      ]    },    "parameter": {      "fields": {        "Body Parameter": [          {            "group": "Body Parameter",            "type": "id",            "optional": false,            "field": "issue_id",            "description": "<p>Issue Id</p>"          },          {            "group": "Body Parameter",            "type": "String",            "optional": false,            "field": "comment",            "description": "<p>Comment contents</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "HTTP/1.1 200 OK\n{\n  \"issue_id\": 1,\n  \"comment\": \"Manholes should be covered\"\n}",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>Comment Id</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "user_id",            "description": "<p>Commentor's Id</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "issue_id",            "description": "<p>Issue Id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "comment",            "description": "<p>Comment contents</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "updated_at",            "description": "<p>Comment update date</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "created_at",            "description": "<p>Comment created date</p>"          }        ]      },      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n  \"id\": 1,\n  \"user_id\": 1,\n  \"issue_id\": 1,\n  \"comment\": \"Manholes should be covered\",\n  \"updated_at\": \"2016-10-30T18:49:42.000Z\",\n  \"created_at\": \"2016-10-30T18:49:42.000Z\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Comment error",          "content": "HTTP/1.1 412 Precondition Failed",          "type": "json"        },        {          "title": "Authentication error",          "content": "HTTP/1.1 401 Unauthorized",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routes/comments.js",    "groupTitle": "Comment",    "name": "PostComments"  },  {    "type": "put",    "url": "/comments/:id",    "title": "Update a comment by the authenticated user",    "group": "Comment",    "permission": [      {        "name": "user",        "title": "User needs to be logged in.",        "description": "<p>This method is accessible to only the logged in users.</p>"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>Token of authenticated user</p>"          }        ]      },      "examples": [        {          "title": "Header",          "content": "{\"Authorization\": \"JWT abc.xyz.123.gfh\"}",          "type": "json"        }      ]    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "id",            "optional": false,            "field": "id",            "description": "<p>Comment Id</p>"          }        ],        "Body Parameter": [          {            "group": "Body Parameter",            "type": "String",            "optional": false,            "field": "comment",            "description": "<p>Comment contents</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "HTTP/1.1 200 OK\n{\n  \"comment\": \"Manholes should be covered\"\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 204 No Content",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Comment error",          "content": "HTTP/1.1 412 Precondition Failed",          "type": "json"        },        {          "title": "Authentication error",          "content": "HTTP/1.1 401 Unauthorized",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routes/comments.js",    "groupTitle": "Comment",    "name": "PutCommentsId"  },  {    "type": "post",    "url": "/token",    "title": "Authentication Token",    "group": "Credentials",    "permission": [      {        "name": "none",        "title": "No permission needed.",        "description": "<p>This method is accessible even if the user is not logged in.</p>"      }    ],    "parameter": {      "fields": {        "Body Parameter": [          {            "group": "Body Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>User email</p>"          },          {            "group": "Body Parameter",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>User password</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n\t\"email\": \"john@doe.com\",\n\t\"password\": \"1234\"\n}",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "token",            "description": "<p>Token of authenticated user</p>"          }        ]      },      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\"token\": \"abc.xyz.123.gfh\"}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Authentication error",          "content": "HTTP/1.1 401 Unauthorized",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routes/token.js",    "groupTitle": "Credentials",    "name": "PostToken"  },  {    "type": "delete",    "url": "/issues/:id",    "title": "Delete an issue of an authenticated user",    "group": "Issue",    "permission": [      {        "name": "user",        "title": "User needs to be logged in.",        "description": "<p>This method is accessible to only the logged in users.</p>"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>Token of authenticated user</p>"          }        ]      },      "examples": [        {          "title": "Header",          "content": "{\"Authorization\": \"JWT abc.xyz.123.gfh\"}",          "type": "json"        }      ]    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "id",            "optional": false,            "field": "id",            "description": "<p>Issue Id</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 204 No Content",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Delete error",          "content": "HTTP/1.1 412 Precondition Failed",          "type": "json"        },        {          "title": "Authentication error",          "content": "HTTP/1.1 401 Unauthorized",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routes/issues.js",    "groupTitle": "Issue",    "name": "DeleteIssuesId"  },  {    "type": "get",    "url": "/issues",    "title": "List the issues",    "group": "Issue",    "permission": [      {        "name": "none",        "title": "No permission needed.",        "description": "<p>This method is accessible even if the user is not logged in.</p>"      }    ],    "examples": [      {        "title": "Example usage:",        "content": "Endpoint: /issues\n\nQuery Parameters: q=road&sortBy=created_date&cat=1&date=\n\nExample Request: /issues?q=road&sortBy=created_date&date=2016-10-30T15:17:01.000Z&cat=1",        "type": "json"      }    ],    "parameter": {      "fields": {        "Query Parameter": [          {            "group": "Query Parameter",            "type": "String",            "optional": true,            "field": "q",            "description": "<p>Search text</p>"          },          {            "group": "Query Parameter",            "type": "String",            "optional": true,            "field": "cat",            "description": "<p>Category Id which makes it possible to search only a specific category.</p>"          },          {            "group": "Query Parameter",            "type": "String",            "allowedValues": [              "created_date"            ],            "optional": true,            "field": "sortBy",            "defaultValue": "created_date",            "description": "<p>Sort Results By</p>"          },          {            "group": "Query Parameter",            "type": "Date",            "optional": true,            "field": "date",            "description": "<p>Upper date limit. Issues created before this date are listed. This is also a pagination offset.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "issues",            "description": "<p>Issue's list</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>Issue id</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "category_id",            "description": "<p>Issue category Id</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "user_id",            "description": "<p>User Id of issue creator</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>Issue description</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "address",            "description": "<p>Issue address</p>"          },          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "solved",            "description": "<p>Issue status</p>"          },          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "visibility",            "description": "<p>Issue visibility</p>"          },          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "anon",            "description": "<p>Issue creator's anonymity</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "created_at",            "description": "<p>Issue created date</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "updated_at",            "description": "<p>Issue updated date</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "User",            "description": "<p>Issue creator</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "User.firstName",            "description": "<p>User first name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "User.lastName",            "description": "<p>User last name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "User.user_photo",            "description": "<p>User photo</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "Category",            "description": "<p>Issue category</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "Category.title",            "description": "<p>Issue category title</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "votes",            "description": "<p>Issue vote count</p>"          }        ]      },      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n[\n  {\n    \"id\": 1,\n    \"category_id\": 1,\n    \"user_id\": 1,\n    \"title\": \"manholes\",\n    \"description\": \"manholes in the road that are left uncovered.\",\n    \"address\": \"Kathmandu\",\n    \"solved\": false,\n    \"visibility\": false,\n    \"anon\": false,\n    \"created_at\": \"2016-10-27T07:02:31.000Z\",\n    \"updated_at\": \"2016-10-27T07:02:31.000Z\",\n    \"User\": {\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"user_photo\": null\n    },\n    \"Category\": {\n      \"title\": \"Road\"\n    },\n    \"votes\": 1\n  }\n]",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Issue not found error",          "content": "HTTP/1.1 404 Not Found",          "type": "json"        },        {          "title": "List error",          "content": "HTTP/1.1 412 Precondition Failed",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routes/issues.js",    "groupTitle": "Issue",    "name": "GetIssues"  },  {    "type": "get",    "url": "/issues/:id",    "title": "Get an issue",    "group": "Issue",    "permission": [      {        "name": "user",        "title": "User needs to be logged in.",        "description": "<p>This method is accessible to only the logged in users.</p>"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>Token of authenticated user</p>"          }        ]      },      "examples": [        {          "title": "Header",          "content": "{\"Authorization\": \"JWT abc.xyz.123.gfh\"}",          "type": "json"        }      ]    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "id",            "optional": false,            "field": "id",            "description": "<p>Issue Id</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>Issue id</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "category_id",            "description": "<p>Issue category Id</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "user_id",            "description": "<p>User Id of issue creator</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "title",            "description": "<p>Issue title</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>Issue description</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "address",            "description": "<p>Issue address</p>"          },          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "solved",            "description": "<p>Issue status</p>"          },          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "visibility",            "description": "<p>Issue visibility</p>"          },          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "anon",            "description": "<p>Issue creator's anonymity</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "created_at",            "description": "<p>Issue created date</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "updated_at",            "description": "<p>Issue updated date</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "User",            "description": "<p>Issue creator</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "User.firstName",            "description": "<p>User first name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "User.lastName",            "description": "<p>User last name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "User.user_photo",            "description": "<p>User photo</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "Category",            "description": "<p>Issue category</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "Category.title",            "description": "<p>Issue category title</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "votes",            "description": "<p>Issue vote count</p>"          },          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "user_vote",            "description": "<p>User's vote on the issue</p>"          }        ]      },      "examples": [        {          "title": "Success",          "content": "\tHTTP/1.1 200 OK\n\t  {\n\t    \"id\": 1,\n\t    \"category_id\": 1,\n\t    \"user_id\": 1,\n\t    \"title\": \"manholes\",\n\t    \"description\": \"manholes in the road that are left uncovered.\",\n\t    \"address\": \"Kathmandu\",\n\t    \"solved\": false,\n\t    \"visibility\": false,\n\t    \"anon\": false,\n\t    \"created_at\": \"2016-10-27T07:02:31.000Z\",\n\t    \"updated_at\": \"2016-10-27T07:02:31.000Z\",\n\t    \"User\": {\n\t      \"firstName\": \"John\",\n\t      \"lastName\": \"Doe\",\n\t      \"user_photo\": null\n\t    },\n\t    \"Category\": {\n\t      \"title\": \"Road\"\n\t    },\n\t    \"votes\": 1,\n     \t\"user_vote\": true\n\t  }",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Issue not found error",          "content": "HTTP/1.1 404 Not Found",          "type": "json"        },        {          "title": "Find error",          "content": "HTTP/1.1 412 Precondition Failed",          "type": "json"        },        {          "title": "Authentication error",          "content": "HTTP/1.1 401 Unauthorized",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routes/issues.js",    "groupTitle": "Issue",    "name": "GetIssuesId"  },  {    "type": "get",    "url": "/users/:id/issues",    "title": "List the issues created by a user",    "group": "Issue",    "permission": [      {        "name": "none",        "title": "No permission needed.",        "description": "<p>This method is accessible even if the user is not logged in.</p>"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "id",            "optional": false,            "field": "id",            "description": "<p>User id</p>"          }        ],        "Query Parameter": [          {            "group": "Query Parameter",            "type": "String",            "allowedValues": [              "created_date"            ],            "optional": true,            "field": "sortBy",            "defaultValue": "created_date",            "description": "<p>Sort Results By</p>"          },          {            "group": "Query Parameter",            "type": "Date",            "optional": true,            "field": "date",            "description": "<p>Upper date limit. Issues created before this date are listed. This is also a pagination offset.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "issues",            "description": "<p>Issue's list</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>Issue id</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "category_id",            "description": "<p>Issue category Id</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "user_id",            "description": "<p>User Id of issue creator</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "title",            "description": "<p>Issue title</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>Issue description</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "address",            "description": "<p>Issue address</p>"          },          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "solved",            "description": "<p>Issue status</p>"          },          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "visibility",            "description": "<p>Issue visibility</p>"          },          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "anon",            "description": "<p>Issue creator's anonymity</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "created_at",            "description": "<p>Issue created date</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "updated_at",            "description": "<p>Issue updated date</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "User",            "description": "<p>Issue creator</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "User.firstName",            "description": "<p>User first name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "User.lastName",            "description": "<p>User last name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "User.user_photo",            "description": "<p>User photo</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "Category",            "description": "<p>Issue category</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "Category.title",            "description": "<p>Issue category title</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "votes",            "description": "<p>Issue vote count</p>"          }        ]      },      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n[\n  {\n    \"id\": 1,\n    \"category_id\": 1,\n    \"user_id\": 1,\n    \"title\": \"manholes\",\n    \"description\": \"manholes in the road that are left uncovered.\",\n    \"address\": \"Kathmandu\",\n    \"solved\": false,\n    \"visibility\": false,\n    \"anon\": false,\n    \"created_at\": \"2016-10-27T07:02:31.000Z\",\n    \"updated_at\": \"2016-10-27T07:02:31.000Z\",\n    \"User\": {\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"user_photo\": null\n    },\n    \"Category\": {\n      \"title\": \"Road\"\n    },\n    \"votes\": 1\n  }\n]",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Issue not found error",          "content": "HTTP/1.1 404 Not Found",          "type": "json"        },        {          "title": "List error",          "content": "HTTP/1.1 412 Precondition Failed",          "type": "json"        },        {          "title": "Authentication error",          "content": "HTTP/1.1 401 Unauthorized",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routes/users.js",    "groupTitle": "Issue",    "name": "GetUsersIdIssues"  },  {    "type": "post",    "url": "/issues",    "title": "Add a new issue",    "group": "Issue",    "permission": [      {        "name": "user",        "title": "User needs to be logged in.",        "description": "<p>This method is accessible to only the logged in users.</p>"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>Token of authenticated user</p>"          }        ]      },      "examples": [        {          "title": "Header",          "content": "{\"Authorization\": \"JWT abc.xyz.123.gfh\"}",          "type": "json"        }      ]    },    "parameter": {      "fields": {        "Body Parameter": [          {            "group": "Body Parameter",            "type": "String",            "optional": false,            "field": "title",            "description": "<p>Issue title</p>"          },          {            "group": "Body Parameter",            "type": "Number",            "optional": false,            "field": "category_id",            "description": "<p>Issue category Id</p>"          },          {            "group": "Body Parameter",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>Issue description</p>"          },          {            "group": "Body Parameter",            "type": "String",            "optional": false,            "field": "address",            "description": "<p>Issue address</p>"          },          {            "group": "Body Parameter",            "type": "Boolean",            "optional": true,            "field": "solved",            "description": "<p>Issue status</p>"          },          {            "group": "Body Parameter",            "type": "Boolean",            "optional": true,            "field": "visibility",            "description": "<p>Issue visibility</p>"          },          {            "group": "Body Parameter",            "type": "Boolean",            "optional": true,            "field": "anon",            "description": "<p>Issue creator's anonymity</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "HTTP/1.1 200 OK\n  {\n    \"title\": \"manholes\",\n\t\"category_id\": 1,\n    \"description\": \"manholes in the road that are left uncovered.\",\n    \"address\": \"Kathmandu\"\n  }",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n  {\n    \"id\": 1,\n    \"title\": \"manholes\",\n    \"category_id\": 1,\n    \"user_id\": 1,\n    \"description\": \"manholes in the road that are left uncovered.\",\n    \"address\": \"Kathmandu\",\n    \"solved\": false,\n    \"visibility\": false,\n    \"anon\": false,\n    \"created_at\": \"2016-10-30T18:49:42.000Z\",\n    \"updated_at\": \"2016-10-30T18:49:42.000Z\"\n  }",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Add error",          "content": "HTTP/1.1 412 Precondition Failed",          "type": "json"        },        {          "title": "Authentication error",          "content": "HTTP/1.1 401 Unauthorized",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routes/issues.js",    "groupTitle": "Issue",    "name": "PostIssues"  },  {    "type": "put",    "url": "/issues/:id",    "title": "Update an authenticated user's issue",    "group": "Issue",    "permission": [      {        "name": "user",        "title": "User needs to be logged in.",        "description": "<p>This method is accessible to only the logged in users.</p>"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>Token of authenticated user</p>"          }        ]      },      "examples": [        {          "title": "Header",          "content": "{\"Authorization\": \"JWT abc.xyz.123.gfh\"}",          "type": "json"        }      ]    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "id",            "optional": false,            "field": "id",            "description": "<p>Issue Id</p>"          }        ],        "Body Parameter": [          {            "group": "Body Parameter",            "type": "String",            "optional": false,            "field": "title",            "description": "<p>Issue title</p>"          },          {            "group": "Body Parameter",            "type": "Number",            "optional": false,            "field": "category_id",            "description": "<p>Issue category Id</p>"          },          {            "group": "Body Parameter",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>Issue description</p>"          },          {            "group": "Body Parameter",            "type": "String",            "optional": false,            "field": "address",            "description": "<p>Issue address</p>"          },          {            "group": "Body Parameter",            "type": "Boolean",            "optional": false,            "field": "solved",            "description": "<p>Issue status</p>"          },          {            "group": "Body Parameter",            "type": "Boolean",            "optional": false,            "field": "visibility",            "description": "<p>Issue visibility</p>"          },          {            "group": "Body Parameter",            "type": "Boolean",            "optional": false,            "field": "anon",            "description": "<p>Issue creator's anonymity</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "HTTP/1.1 200 OK\n  {\n    \"title\": \"manholes\",\n\t\"category_id\": 1,\n    \"description\": \"manholes in the road that are left uncovered.\",\n    \"address\": \"Kathmandu\",\n    \"solved\": false,\n    \"visibility\": false,\n    \"anon\": false\n  }",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 204 No Content",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Update error",          "content": "HTTP/1.1 412 Precondition Failed",          "type": "json"        },        {          "title": "Authentication error",          "content": "HTTP/1.1 401 Unauthorized",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routes/issues.js",    "groupTitle": "Issue",    "name": "PutIssuesId"  },  {    "type": "get",    "url": "/",    "title": "API Status",    "group": "Status",    "permission": [      {        "name": "none",        "title": "No permission needed.",        "description": "<p>This method is accessible even if the user is not logged in.</p>"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "status",            "description": "<p>API Status' message</p>"          }        ]      },      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\"status\": \"Pstuff API\"}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routes/index.js",    "groupTitle": "Status",    "name": "Get"  },  {    "type": "delete",    "url": "/users/:id",    "title": "Delete a user",    "group": "User",    "permission": [      {        "name": "admin",        "title": "Administrator access only",        "description": "<p>This method is only accessible to users with admin access.</p>"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>Token of an authenticated admin</p>"          }        ]      },      "examples": [        {          "title": "Header",          "content": "{\"Authorization\": \"JWT abc.xyz.123.gfh\"}",          "type": "json"        }      ]    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "id",            "optional": false,            "field": "id",            "description": "<p>User Id</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 204 No Content",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Delete error",          "content": "HTTP/1.1 412 Precondition Failed",          "type": "json"        },        {          "title": "Authentication error",          "content": "HTTP/1.1 401 Unauthorized",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routes/users.js",    "groupTitle": "User",    "name": "DeleteUsersId"  },  {    "type": "get",    "url": "/user",    "title": "Return the authenticated user's data",    "group": "User",    "permission": [      {        "name": "user",        "title": "User needs to be logged in.",        "description": "<p>This method is accessible to only the logged in users.</p>"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>Token of authenticated user</p>"          }        ]      },      "examples": [        {          "title": "Header",          "content": "{\"Authorization\": \"JWT abc.xyz.123.gfh\"}",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>User id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "firstName",            "description": "<p>User first name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lastName",            "description": "<p>User last name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>User email</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "dob",            "description": "<p>User date of birth</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "phonenumber",            "description": "<p>User phone number</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "sex",            "description": "<p>User sex</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "profession",            "description": "<p>User profession</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "address",            "description": "<p>User address</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "user_photo",            "description": "<p>User photo</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "role_id",            "description": "<p>User role</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "created_at",            "description": "<p>User created date</p>"          }        ]      },      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n  \"id\": 1,\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"email\": \"john@doe.com\",\n  \"dob\": \"1994-02-03\",\n  \"phonenumber\": \"9849123453\",\n  \"sex\": \"male\",\n  \"profession\": \"Student\",\n  \"address\": \"Kathmandu\",\n  \"user_photo\": null,\n  \"role_id\": 1,\n  \"created_at\": \"2016-10-27T07:23:56.000Z\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Authentication error",          "content": "HTTP/1.1 401 Unauthorized",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routes/users.js",    "groupTitle": "User",    "name": "GetUser"  },  {    "type": "get",    "url": "/users",    "title": "List the registered users",    "group": "User",    "permission": [      {        "name": "none",        "title": "No permission needed.",        "description": "<p>This method is accessible even if the user is not logged in.</p>"      }    ],    "examples": [      {        "title": "Example usage:",        "content": "Endpoint: /users\n\nQuery Parameters: q=john&sortBy=created_date&date=\n\nExample Request: /users?q=john&sortBy=created_date&date=2016-10-30T15:17:01.000Z",        "type": "json"      }    ],    "parameter": {      "fields": {        "Query Parameter": [          {            "group": "Query Parameter",            "type": "String",            "optional": true,            "field": "q",            "description": "<p>Search text</p>"          },          {            "group": "Query Parameter",            "type": "String",            "allowedValues": [              "created_date"            ],            "optional": true,            "field": "sortBy",            "defaultValue": "created_date",            "description": "<p>Sort Results By</p>"          },          {            "group": "Query Parameter",            "type": "Date",            "optional": true,            "field": "date",            "description": "<p>Upper date limit. Users created before this date are listed. This is also a pagination offset.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "users",            "description": "<p>User's list</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>User id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "firstName",            "description": "<p>User first name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lastName",            "description": "<p>User last name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>User email</p>"          }        ]      },      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n\t[\n\t\t{\n\t\t\"id\": 1,\n\t\t\"firstName\": \"John\",\n\t\t\"lastName\": \"Doe\",\n\t\t\"email\": \"john@doe.com\"\n\t\t}\n\t]",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "List Error",          "content": "HTTP/1.1 412 Precondition Failed",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routes/users.js",    "groupTitle": "User",    "name": "GetUsers"  },  {    "type": "get",    "url": "/users/:id",    "title": "Get a user",    "group": "User",    "permission": [      {        "name": "none",        "title": "No permission needed.",        "description": "<p>This method is accessible even if the user is not logged in.</p>"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "id",            "optional": false,            "field": "id",            "description": "<p>User id</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>User id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "firstName",            "description": "<p>User first name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lastName",            "description": "<p>User last name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>User email</p>"          }        ]      },      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n\"id\": 1,\n\"firstName\": \"John\",\n\"lastName\": \"Doe\",\n\"email\": \"john@doe.com\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "User not found error",          "content": "HTTP/1.1 404 Not Found",          "type": "json"        },        {          "title": "Find error",          "content": "HTTP/1.1 412 Precondition Failed",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routes/users.js",    "groupTitle": "User",    "name": "GetUsersId"  },  {    "type": "post",    "url": "/users",    "title": "Register a new user",    "group": "User",    "permission": [      {        "name": "none",        "title": "No permission needed.",        "description": "<p>This method is accessible even if the user is not logged in.</p>"      }    ],    "parameter": {      "fields": {        "Body Parameter": [          {            "group": "Body Parameter",            "type": "String",            "optional": false,            "field": "firstName",            "description": "<p>User first name</p>"          },          {            "group": "Body Parameter",            "type": "String",            "optional": false,            "field": "lastName",            "description": "<p>User last name</p>"          },          {            "group": "Body Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>User's unique email</p>"          },          {            "group": "Body Parameter",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>User password</p>"          },          {            "group": "Body Parameter",            "type": "String",            "optional": true,            "field": "dob",            "description": "<p>User date of birth</p>"          },          {            "group": "Body Parameter",            "type": "String",            "optional": false,            "field": "phonenumber",            "description": "<p>User's unique phone number</p>"          },          {            "group": "Body Parameter",            "type": "String",            "optional": true,            "field": "sex",            "description": "<p>User sex</p>"          },          {            "group": "Body Parameter",            "type": "String",            "optional": true,            "field": "profession",            "description": "<p>User profession</p>"          },          {            "group": "Body Parameter",            "type": "String",            "optional": true,            "field": "address",            "description": "<p>User address</p>"          },          {            "group": "Body Parameter",            "type": "String",            "optional": true,            "field": "user_photo",            "description": "<p>User photo</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "\t\t{\n\t\t  \"firstName\": \"John\",\n\t\t  \"lastName\": \"Doe\",\n\t\t  \"email\": \"john@doe.com\",\n       \"password\": \"verystrongpassword123\",\n\t\t  \"phonenumber\": \"9849123453\"\n\t\t}",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>User id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "firstName",            "description": "<p>User first name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lastName",            "description": "<p>User last name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>User's unique email</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "phonenumber",            "description": "<p>User's unique phone number</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "role_id",            "description": "<p>Role id</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "updated_at",            "description": "<p>Update's date</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "created_at",            "description": "<p>Register's date</p>"          }        ]      },      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n  \"id\": 1,\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"email\": \"john@doe.com\",\n  \"phonenumber\": \"9849123453\",\n  \"role_id\": 1,\n  \"updated_at\": \"2016-10-30T15:17:01.000Z\",\n  \"created_at\": \"2016-10-27T07:23:56.000Z\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Register error",          "content": "HTTP/1.1 412 Precondition Failed",          "type": "json"        },        {          "title": "Validation error",          "content": "HTTP/1.1 412 Precondition Failed\n{\n\t\"msg\": \"Validation error\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routes/users.js",    "groupTitle": "User",    "name": "PostUsers"  },  {    "type": "put",    "url": "/user",    "title": "Update the authenticated user's data",    "group": "User",    "permission": [      {        "name": "user",        "title": "User needs to be logged in.",        "description": "<p>This method is accessible to only the logged in users.</p>"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>Token of authenticated user</p>"          }        ]      },      "examples": [        {          "title": "Header",          "content": "{\"Authorization\": \"JWT abc.xyz.123.gfh\"}",          "type": "json"        }      ]    },    "parameter": {      "fields": {        "Body Parameter": [          {            "group": "Body Parameter",            "type": "String",            "optional": false,            "field": "firstName",            "description": "<p>User first name</p>"          },          {            "group": "Body Parameter",            "type": "String",            "optional": false,            "field": "lastName",            "description": "<p>User last name</p>"          },          {            "group": "Body Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>User email</p>"          },          {            "group": "Body Parameter",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>Plaintext password</p>"          },          {            "group": "Body Parameter",            "type": "Date",            "optional": false,            "field": "dob",            "description": "<p>User date of birth</p>"          },          {            "group": "Body Parameter",            "type": "String",            "optional": false,            "field": "phonenumber",            "description": "<p>User phone number</p>"          },          {            "group": "Body Parameter",            "type": "String",            "optional": false,            "field": "sex",            "description": "<p>User sex</p>"          },          {            "group": "Body Parameter",            "type": "String",            "optional": false,            "field": "profession",            "description": "<p>User profession</p>"          },          {            "group": "Body Parameter",            "type": "String",            "optional": false,            "field": "address",            "description": "<p>User address</p>"          },          {            "group": "Body Parameter",            "type": "String",            "optional": false,            "field": "user_photo",            "description": "<p>User photo</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "\t\tHTTP/1.1 200 OK\n\t\t{\n\t\t  \"id\": 1,\n\t\t  \"firstName\": \"John\",\n\t\t  \"lastName\": \"Doe\",\n\t\t  \"email\": \"john@doe.com\",\n       \"password\": \"verystrongpassword123\",\n\t\t  \"dob\": \"1994-02-03\",\n\t\t  \"phonenumber\": \"9849123453\",\n\t\t  \"sex\": \"male\",\n\t\t  \"profession\": \"Student\",\n\t\t  \"address\": \"Kathmandu\",\n\t\t  \"user_photo\": null\n\t\t}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 204 No Content",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Authentication error",          "content": "HTTP/1.1 401 Unauthorized",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routes/users.js",    "groupTitle": "User",    "name": "PutUser"  },  {    "type": "post",    "url": "/issues/:id/vote",    "title": "Vote on an issue",    "group": "Vote",    "permission": [      {        "name": "user",        "title": "User needs to be logged in.",        "description": "<p>This method is accessible to only the logged in users.</p>"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>Token of authenticated user</p>"          }        ]      },      "examples": [        {          "title": "Header",          "content": "{\"Authorization\": \"JWT abc.xyz.123.gfh\"}",          "type": "json"        }      ]    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "id",            "optional": false,            "field": "id",            "description": "<p>Issue Id</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "allowedValues": [              "created",              "deleted"            ],            "optional": false,            "field": "status",            "description": "<p>Vote status: created or deleted</p>"          }        ]      },      "examples": [        {          "title": "Success on creating vote",          "content": "HTTP/1.1 200 OK\n  {\n      \"status\": \"created\"\n  }",          "type": "json"        },        {          "title": "Success on deleting vote",          "content": "HTTP/1.1 200 OK\n  {\n      \"status\": \"deleted\"\n  }",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Vote error",          "content": "HTTP/1.1 412 Precondition Failed",          "type": "json"        },        {          "title": "Authentication error",          "content": "HTTP/1.1 401 Unauthorized",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routes/issues.js",    "groupTitle": "Vote",    "name": "PostIssuesIdVote"  },  {    "type": "post",    "url": "/issues/:id/vote",    "title": "Vote on an issue",    "group": "Vote",    "permission": [      {        "name": "user",        "title": "User needs to be logged in.",        "description": "<p>This method is accessible to only the logged in users.</p>"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>Token of authenticated user</p>"          }        ]      },      "examples": [        {          "title": "Header",          "content": "{\"Authorization\": \"JWT abc.xyz.123.gfh\"}",          "type": "json"        }      ]    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "id",            "optional": false,            "field": "id",            "description": "<p>Issue Id</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "allowedValues": [              "created",              "deleted"            ],            "optional": false,            "field": "status",            "description": "<p>Vote status: created or deleted</p>"          }        ]      },      "examples": [        {          "title": "Success on creating vote",          "content": "HTTP/1.1 200 OK\n  {\n      \"status\": \"created\"\n  }",          "type": "json"        },        {          "title": "Success on deleting vote",          "content": "HTTP/1.1 200 OK\n  {\n      \"status\": \"deleted\"\n  }",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Vote error",          "content": "HTTP/1.1 412 Precondition Failed",          "type": "json"        },        {          "title": "Authentication error",          "content": "HTTP/1.1 401 Unauthorized",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routes/photos.js",    "groupTitle": "Vote",    "name": "PostIssuesIdVote"  }]
